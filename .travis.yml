if: tag IS blank
os: linux
language: python
dist: focal

env:
  global:
    - BUILD_PYTHON_VERSION=3.9.1
    - MIN_PYTHON_VERSION=3.9.1
    - BUILD_OPENSSL_VERSION=1.1.1i
    - MIN_OPENSSL_VERSION=1.1.1g
    - PATCHELF_VERSION=0.12
    - PYINSTALLER_COMMIT=40c9abce2d8de879e414fd377c933dccaab1e156
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/python
    - $HOME/ssl

jobs:
  fast_finish: true
  include:
    - os: linux
      name: "Linux 64-bit Focal"
      dist: focal
      language: shell
      env:
        - DIST_UPGRADE=true
    - os: linux
      name: "Linux 64-bit Focal"
      dist: focal
      arch: arm64-graviton2
      virt: lxd
      group: edge
      language: shell
      env:
        - DIST_UPGRADE=true
    - os: linux
      name: "Linux 64-bit Bionic"
      dist: bionic
      language: shell
      env:
        - DIST_UPGRADE=true
    - os: linux
      name: "Linux 64-bit Bionic"
      dist: bionic
      arch: arm64-graviton2
      virt: lxd
      group: edge
      language: shell
      env:
        - DIST_UPGRADE=true
    - os: linux
      name: "Linux 64-bit Xenial"
      dist: xenial
      language: shell
      env:
        - DIST_UPGRADE=false
    - os: linux
      name: "Linux 64-bit Xenial"
      dist: xenial
      arch: arm64-graviton2
      virt: lxd
      group: edge
      language: shell
      env:
        - DIST_UPGRADE=false
    - os: linux
      name: "Linux 64-bit Trusty"
      dist: trusty
      language: shell
      env:
        - DIST_UPGRADE=true
    - os: linux
      name: "Linux 64-bit Trusty"
      dist: trusty
      arch: arm64-graviton2
      virt: lxd
      group: edge
      language: shell
      env:
        - DIST_UPGRADE=true
    - os: linux
      name: "Linux 64-bit Precise"
      dist: precise
      language: shell
      env:
        - DIST_UPGRADE=true
        - PATCHELF_VERSION=0.9
    - os: linux
      name: "Linux 64-bit Precise"
      dist: precise
      arch: arm64-graviton2
      virt: lxd
      group: edge
      language: shell
      env:
        - DIST_UPGRADE=true
        - PATCHELF_VERSION=0.9
before_install:
- if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
    export GAMOS="macos";
  else
    export GAMOS="${TRAVIS_OS_NAME}";
  fi
- if [ "${TRAVIS_JOB_NAME}" == "Windows 32-bit" ]; then
    export PLATFORM="x86";
  elif [ "${TRAVIS_CPU_ARCH}" == "amd64" ]; then
    export PLATFORM="x86_64";
  else
    export PLATFORM="${TRAVIS_CPU_ARCH}";
  fi
- source src/travis/${TRAVIS_OS_NAME}-before-install.sh

install:
- source src/travis/${TRAVIS_OS_NAME}-install.sh

script:
- $gam version extended
- $gam version | grep travis # travis should be part of the path (not /tmp or such)
# determine which Python version GAM is built with and ensure it's at least build version from above.
- if [[ "$TRAVIS_JOB_NAME" != *"Testing" ]];  then vline=$($gam version | grep "Python "); python_line=($vline); this_python=${python_line[1]}; $python tools/a_atleast_b.py $this_python $MIN_PYTHON_VERSION; fi
# determine which OpenSSL version GAM is built with and ensure it's at least build version from above.
- if [[ "$TRAVIS_JOB_NAME" != *"Testing" ]]; then vline=$($gam version extended | grep "OpenSSL "); openssl_line=($vline); this_openssl=${openssl_line[1]}; $python tools/a_atleast_b.py $this_openssl $MIN_OPENSSL_VERSION; fi
- if [[ "$TRAVIS_JOB_NAME" != *"Testing" ]]; then $gam version extended | grep TLSv1\.[23]; fi # Builds should default TLS 1.2 or 1.3 to Google
- if [[ "$TRAVIS_JOB_NAME" != *"Testing" ]]; then $gam config tls_min_version TLSv1_2 version extended location tls-v1-0.badssl.com:1010; [[ $? == 3 ]]; fi # expect fail since server doesn't support our TLS version

before_deploy:
- export TRAVIS_TAG="preview"
- unset LD_LIBRARY_PATH

deploy:
  provider: releases
  api_key:
    secure: VIDkcckmXYm7SgeoJWwkFUjbv0uJqcR5nEwkrJpLngEu3Vj+raLE2R0DeJ5cJzPrVbGvskc8avcr8Z8Mn0dg3WFb6OoniurQLrTS022vV5wnVqQHeRktym5JdD63SW90VAjsTA9hA0PingL53/Cij+1orxojN+K3sK1NDuFgG6g+eBfZ0QOFy0+S6nx/8zBrrbi4muXdFZw1hI9+FN7K9/ingA2ANSZ2wFK4KUZwSDBT1lOQcYwPPvaajH52vuqeSx0VYW7+qh5e+ivgutr5C8jsW05CuaDLvs0zEUTRMVzl3qZajh78bulCu2GPakeW/ThfJ0h2g98x7hAENnNX1hhmKq/PcDwBYK7ZBP3mepPYj7mbhcHkJQ3itusiXQfoWVFa/ivs9KHeRQgbxAM39FA1ox/POUesLp2G2BuUvl77ZL/RRp6DZDdCR+dH7v222zYqkpFAY05k25ZzieJkpEsWSfSrOlKXjNssEn/GMjyQqpQcVIFCvGoA9ZyKqCLLixcEzyW1arp2M76ujwxEI5muaZ6foQIcgfWWqWwYryy2boximmRLcff86NzZQD1OS7XP8H59kTL1zWCqBgDdvfthGKp0YY4O44pr7CTw+GeQT0MafBkBriHHlUU4NcorrAghQPwoEfT9QvMwNJ9bOTU8LiWgFsPrsMcPmHxaI84=
  file_glob: true
  overwrite: true
  file: gamadv-xtd3-$GAMVERSION-*
  skip_cleanup: true
  draft: true
  on:
    repo: taers232c/GAMADV-XTD3
    condition: $TRAVIS_JOB_NAME != *"Testing"
